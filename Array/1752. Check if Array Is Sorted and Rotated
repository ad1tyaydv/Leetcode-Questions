// Time complexity = O(N^2) 

class Solution {
public:
    bool check(vector<int>& nums) {
        
        int n = nums.size();
        vector<int> sorted = nums;
        sort(begin(sorted), end(sorted));

        for(int i=0;i<n;i++) {
            bool isSorted = true;
            for(int j = 0;j<n;j++) {

                if(sorted[j] != nums[(i + j) % n]) {
                    isSorted = false;
                    break;
                }
            }

            if(isSorted) {
                return true;
            }
        }

        return false;
    }
};

--------------------------------------------------------------------------------------------------------------------------

// Time Complexity = O(N)

class Solution {
public:
    bool check(vector<int>& nums) {
        
        int n = nums.size();
        int peak = 0;

        for(int i=0;i<n;i++) {

            if(nums[i] > nums[(i + 1) % n]) {
                peak++;
            }
        }

        return peak <= 1;
    }
};
